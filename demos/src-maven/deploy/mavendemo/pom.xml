<?xml version="1.0" encoding="UTF-8"?>
<!-- ////////////////////////////////////////////////////////////////////////
     //
     // This demo file is part of yFiles for Java (Swing) 3.5.
     //
     // Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,
     // 72070 Tuebingen, Germany. All rights reserved.
     //
     // yFiles demo files exhibit yFiles for Java (Swing) functionalities. Any redistribution
     // of demo resource files, with or without modification, is not permitted.
     // Owners of a valid software license for a yFiles for Java (Swing) version that this
     // demo is shipped with are allowed to use the resource file as basis for
     // their own yFiles for Java (Swing) powered applications. Use of such programs is
     // governed by the rights and conditions as set out in the yFiles for Java (Swing)
     // license agreement.
     //
     // THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
     // WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
     // MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
     // NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
     // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
     // TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
     // PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
     // LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
     // NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
     // SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     // 
     ////////////////////////////////////////////////////////////////////////-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.yworks</groupId>
  <artifactId>mavendemo</artifactId>
  <version>1.0.0</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.yworks.yfiles</groupId>
      <artifactId>yfiles-for-java-complete</artifactId>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>com.yworks</groupId>
      <artifactId>yguard</artifactId>
      <version>3.1.0</version>
      <!-- declare as "provided", as we do not want the assembly plugin
      to pack this dependency into the "uber" jar-->
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <mainClass>mavendemo.MavenDemo</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>mavendemo.MavenDemo</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <id>obfuscate</id>
            <configuration>
              <target>
                <!-- use the compile classpath here, as otherwise the yGuard dependency
                is not available, as it has been declared as "provided" above -->
                <property name="runtime_classpath" refid="maven.compile.classpath"/>
                <taskdef name="yguard" classname="com.yworks.yguard.YGuardTask" classpath="${runtime_classpath}"/>
                <yguard>
                  <inoutpair in="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar"
                             out="${project.build.directory}/${project.build.finalName}-jar-with-dependencies_obfuscated.jar"/>

                  <!-- specifies the obfuscation task and the obfuscation options -->
                  <rename logfile="target/obfuscation.log"
                          replaceClassNameStrings="true"
                          mainclass="mavendemo.MavenDemo"
                          annotationclass="com.yworks.yfiles.utils.Obfuscation">

                    <keep>
                      <class classes="private" methods="private" fields="private">
                        <patternset>
                          <include name="mavendemo.**"/>
                        </patternset>
                      </class>
                    </keep>
                    
                    <!--
                      make sure that the .properties files are renamed according to their
                      corresponding class files, yFiles needs this to function properly when obfuscated
                    -->
                    <adjust replaceName="true">
                      <include name="**/*.properties"/>
                    </adjust>
                  </rename>
                </yguard>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
    </resources>
  </build>
</project>
